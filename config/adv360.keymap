
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
      &kp ESC     &kp N1    &kp N2       &kp N3             &kp N4  &kp N5                            &kp DEL                                                                               &mo 1  &kp N6             &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
      &kp TAB      &kp Q     &kp W        &kp E              &kp R   &kp T            &mt LG(LC(LA(V))) LG(V)                                                                           &kp RC(Y)   &kp Y              &kp U      &kp I     &kp O     &kp P   &kp BSLH
    &kp LCTRL      &kp A     &kp S        &kp D              &kp F   &kp G                    &mt LC(X) LC(C)   &kp LA(LS(I))  &kp LA(SPACE)                    &kp ESC        &kp DEL  &kp RC(Z)   &kp H              &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
    &kp LSHFT      &kp Z     &kp X        &kp C              &kp V   &kp B                                                             &mo 2                   &kp RGUI                             &kp N              &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
 &kp LEFT_WIN  &kp GRAVE  &kp LALT  &kp AT_SIGN  &lt 3 LC(LS(F12))                                  &kp SPACE  &kp LEFT_SHIFT      &kp LCTRL                  &kp RCTRL  &kp BACKSPACE  &kp ENTER          &lt 2 RC(RS(F11))  &kp MINUS  &kp LBKT  &kp RBKT      &mo 2
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_fnsym {
            bindings = <
 &trans           &kp F1       &kp F2                &kp F3                 &kp F4     &kp F5            &trans                                                  &trans     &kp F6     &kp F7    &kp F8     &kp F9    &kp F10  &kp F11
 &trans  &kp EXCLAMATION  &kp AT_SIGN        &kp LEFT_BRACE        &kp RIGHT_BRACE   &kp PIPE            &trans                                                  &trans     &trans     &trans    &trans     &trans     &trans  &kp F12
 &trans         &kp HASH   &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE            &trans  &trans  &trans                  &trans  &trans  &trans  &kp ASTRK  &kp EQUAL  &kp PLUS  &kp MINUS  &kp SLASH   &trans
 &trans      &kp PERCENT    &kp CARET      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp TILDE                            &trans                  &trans                     &trans     &trans    &trans     &trans     &trans   &trans
 &trans        &kp EQUAL       &trans                &trans                 &trans                       &trans  &trans  &trans                  &trans  &trans  &trans                &trans    &trans     &trans     &trans   &trans
            >;
        };

        layer_navi {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans                   &trans          &trans          &trans           &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans                   &trans        &kp HOME    &kp UP_ARROW          &kp END  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &kp RC(RG(RIGHT_ARROW))  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                   &kp RC(RG(LEFT_ARROW))       &kp PG_DN          &trans        &kp PG_UP  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans                                   &trans          &trans           &trans  &trans  &trans
            >;
        };

    };
};
